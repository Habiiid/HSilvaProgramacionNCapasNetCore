@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2> Formulario </h2>
    <div class="row">
        <div class="col-md-12">
<div class="col-md-12">

            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            <div class="container" style="display:none">
                <div class="form-horizontal">

                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.IdProducto, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdProducto)  
                            
                        </div>
                    </div>
                </div>
            </div>

            <div class="container">
              <div class="row">
                <div class="col">
                     @Html.LabelFor(model => model.Nombre)
                     @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                     @Html.ValidationMessageFor(model => model.Nombre)
                </div>
   
                <div class="col">                    
                      @Html.LabelFor(model => model.PrecioUnitario)
                      @Html.TextBoxFor(model => model.PrecioUnitario, new { @class = "form-control" })
                      @Html.ValidationMessageFor(model => model.PrecioUnitario)                
                </div>
    
                <div class="col">                   
                      @Html.LabelFor(model => model.Stock)
                      @Html.TextBoxFor(model => model.Stock, new { @class = "form-control" })
                      @Html.ValidationMessageFor(model => model.Stock)               
                </div>
              </div>
            </div>
            
           @* <div class="container">
              <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Proveedor.IdProveedor)
                    @Html.TextBoxFor(model => model.Proveedor.IdProveedor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Proveedor.IdProveedor)
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.Proveedor.Nombre)
                    @Html.TextBoxFor(model => model.Proveedor.Nombre, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Proveedor.Nombre)
                    </div>                    
              </div>
            </div>
*@
            <div class="container">

              <div class="row">
               @* <div class="col">
                    @Html.LabelFor(model => model.Departamento.Area.IdArea)
                    @Html.TextBoxFor(model => model.Departamento.Area.IdArea, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Departamento.Area.IdArea)
                </div>
                <div class="col">
                        @Html.LabelFor(model => model.Departamento.Area.Nombre)
                        @Html.TextBoxFor(model => model.Departamento.Area.Nombre, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Departamento.Area.Nombre)
                    </div> *@   
                    <div class="col">
                        @Html.LabelFor(model => model.Descripcion)
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
              </div>
            </div>

             <div class="container">
             <div class="row">
             <div class="col-md-6">

               @Html.LabelFor(model=> model.Imagen)

                <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                <input id="IFImagen" type='file' class="form-control" name="IFImagen" onchange="validateFile(this), readURL(this);  " />
                            </div> 

                  @if (Model.Imagen != null)
                  {
                  <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:100px ; height:100px" />

                  }
                  else
                  {
                  <img id="Img" src="~/Imagen/SinProducto.jpg" style="width:100px ; height:100px" />
                  }

                  @Html.ValidationMessageFor(model => model.Imagen)
                  </div>
                  @Html.HiddenFor(model => model.Imagen)
             </div>
             </div>
       
             
             <div class="container">
                 <div class="offset-3">
                    <div class="form-group">

                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />

                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })

                        </div>
                    </div>      
                    </div>      
             </div>      
            }
        </div>
    </div>
</div>
</div>

@section Scripts
{

<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript"></script>

<script>
function validateFile()
                {
                    var allowedExtension = ['jpeg', 'jpg'];
                    var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
                    var isValidFile = false;
                        for(var index in allowedExtension) {
                            if(fileExtension === allowedExtension[index]) {
                                isValidFile = true;
                                break;
                            }
                        }
                        if(!isValidFile) {
                            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                            document.getElementById('fuImage').value = ""
                        }
                        return isValidFile;
                }

     </script>             
   }