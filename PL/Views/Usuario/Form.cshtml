@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2> Formulario </h2>
    <div class="row">

        <div class="col-md-12">

            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            <div class="container">
                <div class="form-horizontal"  style="display:none;">

                    <div class="form-group">

                        <div class="col-md-3">

                            @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdUsuario)  
                            
                        </div>
                    </div>
                </div>
            </div>

          
            <div class="container">
              <div class="row">
                <div class="col-md-3">
            @Html.LabelFor(model => model.Nombre)
            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-person"></i></span>
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder="Ejemp: Habid", autocomplete = "off" , @onkeypress = "return SoloLetras(event,'lblNombre')" })
                @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger"})
                @Html.Label("",null, new { @id="lblNombre"})
            </div>
             </div>
 
                <div class="col-md-3">                    
                      @Html.LabelFor(model => model.ApellidoPaterno)
                      <div class="input-group mb-3">
                      <span class="input-group-text"><i class="bi bi-person"></i></span>
                      @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id="txtApellidoPaterno",@onkeypress = "return SoloLetras(event,'lblApellidoPaterno')" })
                      @Html.ValidationMessageFor(model => model.ApellidoPaterno, null, new { @class = "text-danger"})
                      @Html.Label("",null, new { @id="lblApellidoPaterno"})
                      </div>
                </div>
    
                <div class="col-md-3">                   
                      @Html.LabelFor(model => model.ApellidoMaterno)
                       <div class="input-group mb-3">
                      <span class="input-group-text"><i class="bi bi-person"></i></span>
                      @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id="txtApellidoMaterno",@onkeypress = "return SoloLetras(event,'lblApellidoMaterno')"})
                      @Html.ValidationMessageFor(model => model.ApellidoMaterno, null, new { @class = "text-danger"}) 
                      @Html.Label("",null, new { @id="lblApellidoMaterno"})
                </div>
                </div>
              </div>
            </div>

             <div class="container">
                <div class="row">

                      <div class="col-md-3">
                         @Html.LabelFor(model => model.FechaNacimiento)
                         @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @placeholder="dd-MM-yyyy",@id="txtFechaNacimiento"})
                         @Html.ValidationMessageFor(model => model.FechaNacimiento)

                        </div>
 
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.CURP)
                        @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CURP)
                    </div>

                    <div class="col-md-3">                      
                         @Html.LabelFor(model => model.Genero)
                         <div class="col">
                         @Html.Label("F")
                         @Html.RadioButtonFor(model => model.Genero,"F")
                         @Html.Label("M")
                         @Html.RadioButtonFor(model => model.Genero,"M")
                         @Html.ValidationMessageFor(model => model.Genero)
                         </div>                         
                    </div>
                </div>
            </div>

            <div class="container">

              <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.UserName)
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>

                 <div class="col">
                    @Html.LabelFor(model => model.Password)
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id="txtPassword", @onkeypress = "return PasswordValidation(event,'lblPassword')"})
                    @Html.ValidationMessageFor(model => model.Password)   
                    @Html.Label("",null, new { @id="lblPassword"})
                </div>           
              </div>
            </div>

            <div class="container">

                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id="txtEmail", @onkeyup = "return EmailValidation(event,'lblEmail')" })
                        @Html.ValidationMessageFor(model => model.Email)
                        @Html.Label("",null, new{@id="lblEmail"})
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.Telefono)
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id="txtTelefono", @onkeypress = "return SoloNumeros(event,'lblTelefono')" })
                        @Html.ValidationMessageFor(model => model.Telefono)
                        @Html.Label("",null, new{@id="lblTelefono"})
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.Celular)
                        @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id="txtCelular", @onkeypress = "return SoloNumeros(event,'lblCelular')"})
                        @Html.ValidationMessageFor(model => model.Celular)
                        @Html.Label("",null, new { @id="lblCelular"})
                    </div>
                </div>
             </div>

            <div class="container">              
                <div class="row">         
                    <div class="col">                   
                         @Html.LabelFor(model => model.Rol.IdRol)                       
                         @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un Rol", new { @class = "form-control" })
                         @Html.ValidationMessageFor(model => model.Rol.IdRol)
                    </div>                   
                </div>
            </div>

            <div class="container">
             <div class="row">
             <div class="col-md-6">

               @Html.LabelFor(model=> model.Imagen)

                <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                <input id="IFImagen" type='file' class="form-control" name="IFImagen" onchange="validateFile(this), readURL(this);  " />
                            </div> 

                  @if (Model.Imagen != null)
                  {
                  <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:150px ; height:150px" />

                  }
                  else
                  {
                  <img id="Img" src="~/Imagen/NoUser.jpg" style="width:150px ; height:150px" />
                  }

                  @Html.ValidationMessageFor(model => model.Imagen)
                  </div>
                  @Html.HiddenFor(model => model.Imagen)
             </div>
             </div>

             <div class="container">
                  <div class="row">
                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una Pais", new { id = "ddlPais", @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                       </div>

                       <div class="col">
                           @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                            @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }
                       </div>

                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                            @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }
                       </div>

                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.Colonia)
                            @if (Model.Direccion.Colonia.Colonias == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                       </div>
                  </div>
                  <div class="row">
                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.Calle)
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Direccion.Calle)
                       </div>

                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                       </div>

                       <div class="col">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                       </div>
                  </div>
             </div>
      
             <div class="container">
                 <div class="row">
                 <div class="offset-3">
                    <div class="form-group">

                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />

                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                        </div>
                    </div>      
                    </div>      
             </div> 
             </div> 
             
            }
        </div>
    </div>
</div>


@section Scripts
{

<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                            + estados.idEstado + '">'
                            + estados.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.idMunicipio + '">'
                            + municipios.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })


</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i,colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.idColonia + '">'
                            + colonias.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })


</script>

<script>
function validateFile()
                {
                    var allowedExtension = ['jpeg', 'jpg'];
                    var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
                    var isValidFile = false;
                        for(var index in allowedExtension) {
                            if(fileExtension === allowedExtension[index]) {
                                isValidFile = true;
                                break;
                            }
                        }
                        if(!isValidFile) {
                            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                            document.getElementById('fuImage').value = ""
                        }
                        return isValidFile;
                }

                   $( function() {
      $( "#txtFechaNacimiento" ).datepicker({dateFormat: 'dd-mm-yy',
                                  changeMonth: true,
                                  changeYear: true});
    } );
   
    function SoloNumeros(e, controlId) {
        var caracter = e.key;
        if (!/^[0-9]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan numeros");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

         function SoloLetras(e, controlId) {
        var caracter = e.key;
        if (!/^[A-Za-z]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan letras");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

    
            
</script>
}
